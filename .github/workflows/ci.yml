name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test (ARM Cortex-M${{ matrix.arch }}, ${{ matrix.build_type }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        arch: ["0", "0+", "1", "3"]
        build_type: [Debug, Release, MinSizeRel, RelWithDebInfo]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            gcc-arm-none-eabi \
            binutils-arm-none-eabi \
            libnewlib-arm-none-eabi
      
      - name: Install FileCheck
        run: |
          # Install LLVM tools including FileCheck
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main"
          sudo apt-get update
          sudo apt-get install -y llvm-17
          sudo ln -sf /usr/bin/FileCheck-17 /usr/local/bin/FileCheck
      
      - name: Verify toolchain installation
        run: |
          arm-none-eabi-gcc --version
          arm-none-eabi-objdump --version
          cmake --version
          ninja --version
          FileCheck --version || echo "FileCheck version not available"
      
      - name: Configure CMake
        run: |
          cmake --preset=multi \
            -DARM_CORTEX_M_ARCH="${{ matrix.arch }}" \
            -DBUILD_ARM_CORTEX_M_TESTS=ON
      
      - name: Build
        run: |
          # Map build_type to the correct preset name
          if [ "${{ matrix.build_type }}" = "Debug" ]; then
            BUILD_PRESET="multi-debug"
          elif [ "${{ matrix.build_type }}" = "Release" ]; then
            BUILD_PRESET="multi-release"
          elif [ "${{ matrix.build_type }}" = "MinSizeRel" ]; then
            BUILD_PRESET="multi-minsizerel"
          elif [ "${{ matrix.build_type }}" = "RelWithDebInfo" ]; then
            BUILD_PRESET="multi-relwithdebinfo"
          fi
          
          echo "Building with preset: $BUILD_PRESET"
          cmake --build --preset=$BUILD_PRESET
      
      - name: Run tests
        working-directory: build-multi
        run: |
          ctest -C ${{ matrix.build_type }} --output-on-failure --verbose
      
      - name: Upload test results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-cortexm${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            build-multi/Testing/Temporary/LastTest.log
            build-multi/**/*.asm

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ All tests passed successfully!"
          else
            echo "❌ Some tests failed. Check the logs for details."
            exit 1
          fi
