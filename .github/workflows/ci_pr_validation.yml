name: CI - PR Validation

on:
    pull_request:
        branches: ["**"] # Run PR validation on any branch.

    workflow_dispatch: # Manual trigger option.

jobs:
    verify_pr:
        strategy:
            fail-fast: false # Don't cancel other jobs if one fails.

            matrix:
                arch: ["M0", "M0PLUS", "M1"]
                build_type: [debug, minsize, maxspeed]

            max-parallel: 20 # Use maximum possible parallelisation.

        runs-on: ubuntu-latest

        container:
            image: ghcr.io/matejgomboc/armcortexm-cpplib-devenv:latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Configure
              run: cmake --preset=multi -DARM_CORTEX_M_ARCH="${{ matrix.arch }}" -DBUILD_ARM_CORTEX_M_TESTS=ON

            - name: Build
              run: |
                if [ "${{ matrix.build_type }}" = "debug" ]; then
                    BUILD_PRESET="multi-debug"
                elif [ "${{ matrix.build_type }}" = "maxspeed" ]; then
                    BUILD_PRESET="multi-maxspeed"
                elif [ "${{ matrix.build_type }}" = "minsize" ]; then
                    BUILD_PRESET="multi-minsize"
                fi

                cmake --build --preset=$BUILD_PRESET --parallel $(nproc)

            - name: Run tests
              run: |
                if [ "${{ matrix.build_type }}" = "debug" ]; then
                    TEST_PRESET="multi-debug"
                elif [ "${{ matrix.build_type }}" = "maxspeed" ]; then
                    TEST_PRESET="multi-maxspeed"
                elif [ "${{ matrix.build_type }}" = "minsize" ]; then
                    TEST_PRESET="multi-minsize"
                fi

                ctest --preset=$TEST_PRESET

    pr_verification_summary:
        needs: verify_pr
        runs-on: ubuntu-latest
        if: always() # Run even if some matrix jobs failed.
        steps:
            - name: Check if all jobs succeeded
              run: |
                if [[ "${{ needs.verify_pr.result }}" != "success" ]]; then
                  echo "One or more jobs failed"
                  exit 1
                fi
                echo "All jobs completed successfully"
